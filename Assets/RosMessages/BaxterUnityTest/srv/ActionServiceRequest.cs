//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.BaxterUnityTest
{
    [Serializable]
    public class ActionServiceRequest : Message
    {
        public const string k_RosMessageName = "baxter_unity_test/ActionService";
        public override string RosMessageName => k_RosMessageName;

        public string arm;
        public string action;
        public ArmJointsMsg joints;
        public Geometry.PoseMsg pick_pose;
        public Geometry.PoseMsg place_pose;

        public ActionServiceRequest()
        {
            this.arm = "";
            this.action = "";
            this.joints = new ArmJointsMsg();
            this.pick_pose = new Geometry.PoseMsg();
            this.place_pose = new Geometry.PoseMsg();
        }

        public ActionServiceRequest(string arm, string action, ArmJointsMsg joints, Geometry.PoseMsg pick_pose, Geometry.PoseMsg place_pose)
        {
            this.arm = arm;
            this.action = action;
            this.joints = joints;
            this.pick_pose = pick_pose;
            this.place_pose = place_pose;
        }

        public static ActionServiceRequest Deserialize(MessageDeserializer deserializer) => new ActionServiceRequest(deserializer);

        private ActionServiceRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.arm);
            deserializer.Read(out this.action);
            this.joints = ArmJointsMsg.Deserialize(deserializer);
            this.pick_pose = Geometry.PoseMsg.Deserialize(deserializer);
            this.place_pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.arm);
            serializer.Write(this.action);
            serializer.Write(this.joints);
            serializer.Write(this.pick_pose);
            serializer.Write(this.place_pose);
        }

        public override string ToString()
        {
            return "ActionServiceRequest: " +
            "\narm: " + arm.ToString() +
            "\naction: " + action.ToString() +
            "\njoints: " + joints.ToString() +
            "\npick_pose: " + pick_pose.ToString() +
            "\nplace_pose: " + place_pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
